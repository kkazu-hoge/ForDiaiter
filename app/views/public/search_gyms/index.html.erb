<div class='container'>
  <div class="col-12">

    <nav class="col-12 navbar navbar-dark mypage_nav_bg_color p-1">
      <div class="container-fluid navbar-brand">
        <b>ジム検索</b>
      </div>
    </nav>
    <div class="col-12 content_background">
      <div class="container-fluid">
        <div class="container">
          <div class="row justify-content-center">
            <!--<div id="header"></div>-->
            <!--<div>施設名称検索 （例：マチュピチュ、万里の長城）</div>-->
            <!--<input type="text" id="keyword"><button id="search">検索実行</button>-->
            <!--<button id="clear">結果クリア</button>-->
            <!--<div id="target"></div>-->
            <input type="text" size="55" id="search" value="池袋駅付近のカフェ" />
            <input type="button" size="55" value="検索" onClick="SearchGo()" />
            <div id="map_canvas" style="width: 100%; height: 90%;"></div>
          </div>
        </div>
      </div>
    </div>

  </div>
</div>


<script>
  var mayMap;
  var service;

  // マップの初期設定
  function initialize() {
      // Mapクラスのインスタンスを作成（緯度経度は池袋駅に設定）
      var initPos = new google.maps.LatLng(35.729756, 139.711069);
      // 地図のプロパティを設定（倍率、マーカー表示位置、地図の種類）
      var myOptions = {
          zoom: 15,
          center: initPos,
          mapTypeId: google.maps.MapTypeId.ROADMAP
      };
      // #map_canva要素にMapクラスの新しいインスタンスを作成
      myMap = new google.maps.Map(document.getElementById("map_canvas"), myOptions);
      // 検索の条件を指定（緯度経度、半径、検索の分類）
      var request = {
          location: initPos,
          radius: 1000,      // ※１ 表示する半径領域を設定(1 = 1M)
          types: ['cafe']    // ※２ typesプロパティの施設タイプを設定
      };
      var service = new google.maps.places.PlacesService(myMap);
      service.search(request, Result_Places);
  }

  // 検索結果を受け取る
  function Result_Places(results, status){
      // Placesが検家に成功したかとマうかをチェック
      if(status == google.maps.places.PlacesServiceStatus.OK) {
          for (var i = 0; i < results.length; i++) {
              // 検索結果の数だけ反復処理を変数placeに格納
              var place = results[i];
              createMarker({
                   text : place.name,
                   position : place.geometry.location
              });
          }
      }
  }

  // 入力キーワードと表示範囲を設定
  function SearchGo() {
      var initPos = new google.maps.LatLng(0,0);
      var mapOptions = {
          center : initPos,
          zoom: 0,
          mapTypeId : google.maps.MapTypeId.ROADMAP
      };
      // #map_canva要素にMapクラスの新しいインスタンスを作成
      myMap = new google.maps.Map(document.getElementById("map_canvas"), mapOptions);
      service = new google.maps.places.PlacesService(myMap);
      // input要素に入力されたキーワードを検索の条件に設定
      var myword = document.getElementById("search");
      var request = {
          query : myword.value,
          radius : 5000,
          location : myMap.getCenter()
      };
      service.textSearch(request, result_search);
  }

  // 検索の結果を受け取る
  function result_search(results, status) {
      var bounds = new google.maps.LatLngBounds();
      for(var i = 0; i < results.length; i++){
          createMarker({
               position : results[i].geometry.location,
               text : results[i].name,
               map : myMap
           });
          bounds.extend(results[i].geometry.location);
      }
      myMap.fitBounds(bounds);
  }

  // 該当する位置にマーカーを表示
  function createMarker(options) {
      // マップ情報を保持しているmyMapオブジェクトを指定
      options.map = myMap;
      // Markcrクラスのオブジェクトmarkerを作成
      var marker = new google.maps.Marker(options);
      // 各施設の吹き出し(情報ウインドウ)に表示させる処理
      var infoWnd = new google.maps.InfoWindow();
      infoWnd.setContent(options.text);
      // addListenerメソッドを使ってイベントリスナーを登録
      google.maps.event.addListener(marker, 'click', function(){
          infoWnd.open(myMap, marker);
      });
      return marker;
  }



  // ページ読み込み完了後、Googleマップを表示
  google.maps.event.addDomListener(window, 'load', initialize);
  // google.maps.event.addDomListener(window, 'page:change', initialize);
</script>






<!--<script>-->
<!--      var map;-->
<!--      var marker;-->
<!--      var infoWindow;-->

<!--      function initMap() {-->

<!--        //マップ初期表示の位置設定-->
<!--        var target = document.getElementById('target');-->
<!--        var centerp = {lat: 37.67229496806523, lng: 137.88838989062504};-->

<!--        //マップ表示-->
<!--          map = new google.maps.Map(target, {-->
<!--          center: centerp,-->
<!--          zoom: 2,-->
<!--        });-->

<!--        // 検索実行ボタンが押下されたとき-->
<!--        document.getElementById('search').addEventListener('click', function() {-->

<!--          var place = document.getElementById('keyword').value;-->
<!--          var geocoder = new google.maps.Geocoder();      // geocoderのコンストラクタ-->

<!--        geocoder.geocode({-->
<!--            address: place-->
<!--          }, function(results, status) {-->
<!--            if (status == google.maps.GeocoderStatus.OK) {-->

<!--              var bounds = new google.maps.LatLngBounds();-->

<!--              for (var i in results) {-->
<!--                if (results[0].geometry) {-->
<!--                  // 緯度経度を取得-->
<!--                  var latlng = results[0].geometry.location;-->
<!--                  // 住所を取得-->
<!--                  var address = results[0].formatted_address;-->
<!--                  // 検索結果地が含まれるように範囲を拡大-->
<!--                  bounds.extend(latlng);-->
<!--                  // マーカーのセット-->
<!--                  setMarker(latlng);-->
<!--                  // マーカーへの吹き出しの追加-->
<!--                  setInfoW(place, latlng, address);-->
<!--                  // マーカーにクリックイベントを追加-->
<!--                  markerEvent();-->
<!--                }-->
<!--              }-->
<!--            } else if (status == google.maps.GeocoderStatus.ZERO_RESULTS) {-->
<!--              alert("見つかりません");-->
<!--            } else {-->
<!--              console.log(status);-->
<!--              alert("エラー発生");-->
<!--            }-->
<!--          });-->

<!--        });-->

<!--        // 結果クリアーボタン押下時-->
<!--        document.getElementById('clear').addEventListener('click', function() {-->
<!--          deleteMakers();-->
<!--        });-->

<!--      }-->

<!--      // マーカーのセットを実施する-->
<!--      function setMarker(setplace) {-->
<!--        // 既にあるマーカーを削除-->
<!--        deleteMakers();-->

<!--        var iconUrl = 'http://maps.google.com/mapfiles/ms/icons/blue-dot.png';-->
<!--          marker = new google.maps.Marker({-->
<!--            position: setplace,-->
<!--            map: map,-->
<!--            icon: iconUrl-->
<!--          });-->
<!--        }-->

<!--        //マーカーを削除する-->
<!--        function deleteMakers() {-->
<!--          if(marker != null){-->
<!--            marker.setMap(null);-->
<!--          }-->
<!--          marker = null;-->
<!--        }-->

<!--        // マーカーへの吹き出しの追加-->
<!--        function setInfoW(place, latlng, address) {-->
<!--          infoWindow = new google.maps.InfoWindow({-->
<!--          content: "<a href='http://www.google.com/search?q=" + place + "' target='_blank'>" + place + "</a><br><br>" + latlng + "<br><br>" + address + "<br><br><a href='http://www.google.com/search?q=" + place + "&tbm=isch' target='_blank'>画像検索 by google</a>"-->
<!--        });-->
<!--      }-->

<!--      // クリックイベント-->
<!--      function markerEvent() {-->
<!--        marker.addListener('click', function() {-->
<!--          infoWindow.open(map, marker);-->
<!--        });-->
<!--      }-->
<!--</script>-->






